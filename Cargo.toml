[package]
name = "starter"
version = "0.1.0"
edition = "2024"
license = "LICENSE.txt"
publish = false

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bevy = "0.17"
avian2d = { git = "https://github.com/Jondolf/avian", branch = "bevy-0.17" }
bevy_enhanced_input = { git = "https://github.com/simgine/bevy_enhanced_input.git", branch = "bevy-0.17" }

rand = "0.9.1"
log = { version = "*", features = ["max_level_debug", "release_max_level_error"] }
# Compile low-severity logs out of web builds for performance.
tracing = { version = "0.1", features = ["max_level_debug", "release_max_level_warn"] }

[features]
default = [
  # Default to a native dev build.
  "dev_native",
]
dev_native = [
  "dev",
  # Enable asset hot reloading for native dev builds.
  "bevy/file_watcher",
  # Enable embedded asset hot reloading for native dev builds.
  "bevy/embedded_watcher",
]
dev = [
  # Improve compile times for dev builds by linking Bevy as a dynamic library.
  "bevy/dynamic_linking",
  "bevy/bevy_dev_tools",
  "bevy/bevy_ui_debug",
  # Improve error messages coming from Bevy
  "bevy/track_location",
  "avian2d/diagnostic_ui"
]

[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments, which would undesirably trigger this lint.
too_many_arguments = "allow"
# Queries may access many components, which would undesirably trigger this lint.
type_complexity = "allow"
# Make sure macros use their standard braces, such as `[]` for `bevy_ecs::children!`.
nonstandard_macro_braces = "warn"

# Enable a small amount of optimization in debug mode
[profile.dev]
opt-level = 1

# Enable high optimizations for dependencies (incl. Bevy), but not for our code:
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"

# Override some settings for native builds.
[profile.release-native]
# Default to release profile values.
inherits = "release"
# Optimize with performance in mind.
opt-level = 3
# Keep debug information in the binary.
strip = "none"
